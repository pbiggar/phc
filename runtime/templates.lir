get_st_entry_lir_st_entry_not_required:
	(declare_p (ZVPP %2%))
	(if
		(equals (ZVP %1%) (null))
		[
			(assign_zvp (ZVP %1%) (uninit))
			(inc_ref (ZVP %1%))
		]
		[])
	(assign_zvpp 
		(ZVPP %2%) 
		(ref (ZVP %1%)))


get_st_entry_lir_else:
	(declare_p (ZVPP %3%))
	(symtable_fetch 
		(SYMTABLE %1%) 
		(STRING %2%)
		(ZVPP %3%))
	(if 
		(equals_p (ZVPP %3%) (null))
		[
			(assign_zvpp (ZVPP %3%) (ref (uninit)))
			(inc_ref (uninit))
			(symtable_insert
				(SYMTABLE %1%)
				(STRING %2%)
				(ZVPP %3%))
		]
		[])


read_rvalue_lir_st_entry_not_required:
	(declare (ZVP %2%))
	(if (equals (ZVP %1%) (null))
		[ (assign_zvp (ZVP %2%) (uninit)) ]
		[ (assign_zvp (ZVP %2%) (ZVP %1%)) ]
	)


read_rvalue_lir_else:
	(declare_p (ZVPP %3%))
	(declare (ZVP %3%))
	(symtable_fetch 
		(SYMTABLE %1%) 
		(STRING %2%)
		(ZVPP %3%))
	(if (equals_p (ZVPP %3%) (null))
		[ (assign_zvp (ZVP %3%) (uninit)) ]
		[ (assign_zvp (ZVP %3%) (deref (ZVPP %3%))) ])

write_var:
	(if (not (is_ref (deref (ZVPP %1%))))
		[
			(destruct (ZVPP %1%))
			(if (is_ref (ZVP %2%))
				[ (assign_zvp (deref (ZVPP %1%)) (clone (ZVP %2%))) ]
				[
					(inc_ref (ZVP %2%))
					(assign_zvp (deref (ZVPP %1%)) (ZVP %2%))
				])
		]
		[ (overwrite (deref (ZVPP %1%)) (ZVP %2%)) ])



sep_copy_on_write:
	(if (is_copy_on_write (deref (ZVPP %1%)))
		[ 
			(declare (ZVP old))
			(assign_zvp (ZVP old) (deref (ZVPP %1%)))
			(assign_zvp (deref (ZVPP %1%)) (clone (ZVP old)))
			(destruct (ref (ZVP old)))
		]
		[])


copy_into_ref:
	 (set_is_ref (deref (ZVPP %2%)) 1)
	 (inc_ref (deref (ZVPP %2%)))
	 (destruct (ZVPP %1%))
	 (assign_zvp (deref (ZVPP %1%)) (deref (ZVPP %2%)))



