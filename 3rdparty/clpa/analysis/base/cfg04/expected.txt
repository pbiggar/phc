fedge("buffer_append_space",s_func,56,57,"btrue").
fedge("buffer_append_space",s_func,56,59,"bfalse").
fedge("buffer_append_space",s_func,57,59,"call").
fedge("buffer_append_space",s_func,59,60,"btrue").
fedge("buffer_append_space",s_func,59,64,"bfalse").
fedge("buffer_append_space",s_func,60,61,"set").
fedge("buffer_append_space",s_func,61,64,"set").
fedge("buffer_append_space",s_func,64,65,"loop").
fedge("buffer_append_space",s_func,65,66,"set").
fedge("buffer_append_space",s_func,66,67,"set").
fedge("buffer_append_space",s_func,67,83,"set").
fedge("buffer_append_space",s_loop{"s#4"},64,64,"btrue").
fedge("buffer_append_space",s_loop{"s#4"},64,64,"loop").
fedge("buffer_append_space",s_loop{"s#4"},64,69,"bfalse").
fedge("buffer_append_space",s_loop{"s#4"},69,70,"btrue").
fedge("buffer_append_space",s_loop{"s#4"},69,76,"bfalse").
fedge("buffer_append_space",s_loop{"s#4"},70,72,"call").
fedge("buffer_append_space",s_loop{"s#4"},72,73,"set").
fedge("buffer_append_space",s_loop{"s#4"},73,64,"set").
fedge("buffer_append_space",s_loop{"s#4"},76,77,"set").
fedge("buffer_append_space",s_loop{"s#4"},77,78,"btrue").
fedge("buffer_append_space",s_loop{"s#4"},77,80,"bfalse").
fedge("buffer_append_space",s_loop{"s#4"},78,80,"call").
fedge("buffer_append_space",s_loop{"s#4"},80,80,"call").
fedge("buffer_append_space",s_loop{"s#4"},80,81,"set").
fedge("buffer_append_space",s_loop{"s#4"},81,64,"set").
fedge("deeper_nested",s_func,33,41,"loop").
fedge("deeper_nested",s_loop{"s#0"},33,33,"bfalse").
fedge("deeper_nested",s_loop{"s#0"},33,33,"loop").
fedge("deeper_nested",s_loop{"s#0"},33,34,"btrue").
fedge("deeper_nested",s_loop{"s#0"},34,38,"loop").
fedge("deeper_nested",s_loop{"s#0"},38,33,"loop").
fedge("deeper_nested",s_loop{"s#3"},34,34,"bfalse").
fedge("deeper_nested",s_loop{"s#3"},34,34,"loop").
fedge("deeper_nested",s_loop{"s#3"},34,35,"btrue").
fedge("deeper_nested",s_loop{"s#3"},35,34,"loop").
fedge("deeper_nested",s_loop{"s#6"},35,35,"bfalse").
fedge("deeper_nested",s_loop{"s#6"},35,35,"btrue").
fedge("deeper_nested",s_loop{"s#6"},35,35,"loop").
fedge("deeper_nested",s_loop{"s#9"},38,38,"bfalse").
fedge("deeper_nested",s_loop{"s#9"},38,38,"btrue").
fedge("deeper_nested",s_loop{"s#9"},38,38,"loop").
fedge("foo",s_func,10,15,"set").
fedge("foo",s_func,11,15,"set").
fedge("foo",s_func,12,15,"set").
fedge("foo",s_func,13,15,"set").
fedge("foo",s_func,15,16,"set").
fedge("foo",s_func,6,10,"btrue").
fedge("foo",s_func,6,11,"btrue").
fedge("foo",s_func,6,12,"btrue").
fedge("foo",s_func,6,13,"bfalse").
fedge("foo",s_func,6,6,"bfalse").
fedge("foo",s_func,6,7,"btrue").
fedge("foo",s_func,6,8,"btrue").
fedge("foo",s_func,6,9,"btrue").
fedge("foo",s_func,7,15,"set").
fedge("foo",s_func,8,15,"set").
fedge("foo",s_func,9,15,"set").
fedge("irreducible",s_func,20,24,"bfalse").
fedge("irreducible",s_func,20,24,"btrue").
fedge("irreducible",s_func,24,29,"loop").
fedge("irreducible",s_loop{"s#2"},24,24,"bfalse").
fedge("irreducible",s_loop{"s#2"},24,24,"loop").
fedge("irreducible",s_loop{"s#2"},24,25,"btrue").
fedge("irreducible",s_loop{"s#2"},25,24,"set").
fedge("irreducible",s_loop{"s#2"},27,24,"set").
fnode("buffer_append_space",s_func,56,"entry").
fnode("buffer_append_space",s_func,83,"exit").
fnode("buffer_append_space",s_loop{"s#4"},64,"loophead").
fnode("deeper_nested",s_func,33,"entry").
fnode("deeper_nested",s_func,41,"exit").
fnode("deeper_nested",s_loop{"s#0"},33,"loophead").
fnode("deeper_nested",s_loop{"s#3"},34,"loophead").
fnode("deeper_nested",s_loop{"s#6"},35,"loophead").
fnode("deeper_nested",s_loop{"s#9"},38,"loophead").
fnode("foo",s_func,16,"exit").
fnode("foo",s_func,6,"entry").
fnode("irreducible",s_func,20,"entry").
fnode("irreducible",s_func,29,"exit").
fnode("irreducible",s_loop{"s#2"},24,"loophead").
fnode("irreducible",s_loop{"s#2"},27,"loophead").
