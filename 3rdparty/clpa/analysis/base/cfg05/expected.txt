fedge("basic",5,6,"set").
fedge("basic",6,6,"bfalse").
fedge("basic",6,6,"loop").
fedge("basic",6,7,"btrue").
fedge("basic",6,9,"loop").
fedge("basic",7,6,"set").
fedge("complex",45,46,"set").
fedge("complex",46,46,"loop").
fedge("complex",46,47,"btrue").
fedge("complex",46,52,"bfalse").
fedge("complex",46,55,"loop").
fedge("complex",47,46,"loop").
fedge("complex",47,47,"bfalse").
fedge("complex",47,47,"loop").
fedge("complex",47,48,"btrue").
fedge("complex",47,54,"loop").
fedge("complex",48,47,"btrue").
fedge("complex",48,49,"bfalse").
fedge("complex",49,47,"set").
fedge("complex",52,54,"set").
fedge("complex",54,46,"set").
fedge("empty",59,59,"bfalse").
fedge("empty",59,59,"btrue").
fedge("empty",59,59,"loop").
fedge("empty",59,60,"loop").
fedge("exitearly",37,37,"loop").
fedge("exitearly",37,38,"btrue").
fedge("exitearly",37,40,"bfalse").
fedge("exitearly",37,41,"loop").
fedge("exitearly",38,37,"bfalse").
fedge("exitearly",38,37,"btrue").
fedge("exitearly",40,37,"set").
fedge("infinite",69,69,"loop").
fedge("infinite",69,69,"set").
fedge("infinite",69,70,"loop").
fedge("little_infinite",64,64,"loop").
fedge("little_infinite",64,65,"loop").
fedge("match",100,100,"btrue").
fedge("match",100,101,"btrue").
fedge("match",100,102,"bfalse").
fedge("match",101,102,"set").
fedge("match",102,98,"set").
fedge("match",103,104,"btrue").
fedge("match",103,98,"bfalse").
fedge("match",104,98,"set").
fedge("match",105,106,"btrue").
fedge("match",105,98,"bfalse").
fedge("match",106,98,"set").
fedge("match",109,109,"set").
fedge("match",109,110,"btrue").
fedge("match",109,77,"bfalse").
fedge("match",110,77,"set").
fedge("match",115,77,"set").
fedge("match",77,115,"bfalse").
fedge("match",77,116,"loop").
fedge("match",77,77,"loop").
fedge("match",77,78,"btrue").
fedge("match",78,78,"set").
fedge("match",78,79,"set").
fedge("match",79,109,"bfalse").
fedge("match",79,79,"bfalse").
fedge("match",79,81,"btrue").
fedge("match",79,89,"btrue").
fedge("match",79,93,"btrue").
fedge("match",81,82,"btrue").
fedge("match",81,83,"bfalse").
fedge("match",82,77,"set").
fedge("match",83,77,"loop").
fedge("match",83,83,"btrue").
fedge("match",83,83,"loop").
fedge("match",83,83,"set").
fedge("match",83,87,"bfalse").
fedge("match",84,83,"bfalse").
fedge("match",84,84,"call").
fedge("match",84,85,"btrue").
fedge("match",85,83,"set").
fedge("match",87,83,"set").
fedge("match",89,77,"bfalse").
fedge("match",89,89,"set").
fedge("match",89,90,"btrue").
fedge("match",90,77,"set").
fedge("match",93,94,"set").
fedge("match",94,94,"set").
fedge("match",94,95,"btrue").
fedge("match",94,96,"bfalse").
fedge("match",95,77,"set").
fedge("match",96,96,"set").
fedge("match",96,97,"btrue").
fedge("match",96,98,"bfalse").
fedge("match",97,98,"set").
fedge("match",98,105,"bfalse").
fedge("match",98,77,"loop").
fedge("match",98,98,"loop").
fedge("match",98,98,"set").
fedge("match",98,99,"btrue").
fedge("match",99,100,"btrue").
fedge("match",99,103,"bfalse").
fedge("nest_test",120,120,"loop").
fedge("nest_test",120,121,"btrue").
fedge("nest_test",120,124,"bfalse").
fedge("nest_test",120,125,"loop").
fedge("nest_test",121,120,"bfalse").
fedge("nest_test",121,122,"btrue").
fedge("nest_test",122,120,"set").
fedge("nest_test",124,120,"set").
fedge("not_padded",25,25,"bfalse").
fedge("not_padded",25,25,"loop").
fedge("not_padded",25,26,"btrue").
fedge("not_padded",25,33,"loop").
fedge("not_padded",26,25,"loop").
fedge("not_padded",26,26,"loop").
fedge("not_padded",26,27,"btrue").
fedge("not_padded",26,30,"bfalse").
fedge("not_padded",27,26,"loop").
fedge("not_padded",27,27,"bfalse").
fedge("not_padded",27,27,"btrue").
fedge("not_padded",27,27,"loop").
fedge("not_padded",30,26,"loop").
fedge("not_padded",30,30,"bfalse").
fedge("not_padded",30,30,"btrue").
fedge("not_padded",30,30,"loop").
fedge("padded",13,14,"set").
fedge("padded",14,14,"bfalse").
fedge("padded",14,14,"loop").
fedge("padded",14,15,"btrue").
fedge("padded",14,21,"loop").
fedge("padded",15,16,"set").
fedge("padded",16,14,"loop").
fedge("padded",16,16,"loop").
fedge("padded",16,17,"btrue").
fedge("padded",16,19,"bfalse").
fedge("padded",17,16,"set").
fedge("padded",19,16,"set").
fnode("basic",5,"entry").
fnode("basic",6,"loophead").
fnode("basic",9,"exit").
fnode("complex",45,"entry").
fnode("complex",46,"loophead").
fnode("complex",47,"loophead").
fnode("complex",55,"exit").
fnode("empty",59,"entry").
fnode("empty",59,"loophead").
fnode("empty",60,"exit").
fnode("exitearly",37,"entry").
fnode("exitearly",37,"loophead").
fnode("exitearly",41,"exit").
fnode("infinite",69,"entry").
fnode("infinite",69,"loophead").
fnode("infinite",70,"exit").
fnode("little_infinite",64,"entry").
fnode("little_infinite",64,"loophead").
fnode("little_infinite",65,"exit").
fnode("match",116,"exit").
fnode("match",77,"entry").
fnode("match",77,"loophead").
fnode("match",84,"loophead").
fnode("match",98,"loophead").
fnode("nest_test",120,"entry").
fnode("nest_test",120,"loophead").
fnode("nest_test",125,"exit").
fnode("not_padded",25,"entry").
fnode("not_padded",25,"loophead").
fnode("not_padded",26,"loophead").
fnode("not_padded",27,"loophead").
fnode("not_padded",30,"loophead").
fnode("not_padded",33,"exit").
fnode("padded",13,"entry").
fnode("padded",14,"loophead").
fnode("padded",16,"loophead").
fnode("padded",21,"exit").
