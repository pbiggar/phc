/home/isil/SATURN/clpa/analysis/null/base01: clpa run.clp
Entering cil_body("test1")...
@red
@22 red Possible NULL dereference of p
@test.c
@Intraprocedural  Null error
@None
@
Entering cil_body("test2")...
Entering cil_body("test3")...
@red
@40 red Possible NULL dereference of q
@test.c
@Intraprocedural  Null error
@None
@
Entering cil_body("test4")...
@red
@49 red Possible NULL dereference of sp->next->ptr
@test.c
@Intraprocedural  Null error
@None
@
Entering cil_body("test5")...
@red
@55 red Possible NULL dereference of p
@test.c
@Intraprocedural  Null error
@None
@
Entering cil_body("test6")...
@red
@62 red Possible NULL dereference of p
@test.c
@Intraprocedural  Null error
@None
@
Entering cil_body("test7")...
@orange
@71 orange (INCONSISTENT USE) Possible null dereference of variable p. This variable is checked for Null at lines: 70:test.c
@test.c
@Inconsistency error
@None
@
Entering cil_body("test8")...
@orange
@80 orange (INCONSISTENT USE) Possible null dereference of variable z. This variable is checked for Null at lines: 78:test.c
@test.c
@Inconsistency error
@None
@
Entering cil_body("test9")...
Entering cil_body("test10")...
@red
@97 red Possible NULL dereference of p
@test.c
@Intraprocedural Null error
@None
@
Entering cil_body("test11")...
Entering cil_body("test12")...
@blue
@113 blue __arg0 of function test11 can evaluate to NULL and is dereferenced through call chain: test11 (113:test.c),  final site of dereference is: (107:test.c)
@test.c
@Null pointer is passed to a function which dereferences it.
@None
@
Entering cil_body("test13")...
Entering cil_body("test14")...
@blue
@128 blue __arg0 of function test13 can evaluate to NULL and is dereferenced through call chain: test13 (128:test.c),  final site of dereference is: (121:test.c)
@test.c
@Null pointer is passed to a function which dereferences it.
@None
@
Entering cil_body("test15")...
Entering cil_body("test16")...
Entering cil_body("test17")...
Entering cil_body("test18")...
Entering cil_body("test19")...
Entering cil_body("test20")...
@violet
@192 violet (INCONSISTENT USE) Possible null dereference __arg0. This variable is checked for Null at lines: 191:test.c, and is dereferenced through call chain: test19 (192:test.c),  final site of dereference is: (186:test.c)
@test.c
@Interprocedural inconsistency error
@None
@
Entering cil_body("test21")...
Entering cil_body("test22")...
Entering cil_body("test23")...
Entering cil_body("test24")...
Entering cil_body("test25")...
Entering cil_body("test26")...
Entering cil_body("test27")...
@orange
@267 orange (INCONSISTENT USE) Possible null dereference of variable a. This variable is checked for Null at lines: 266:test.c
@test.c
@Inconsistency error
@None
@
Entering cil_body("test28")...
@orange
@275 orange (INCONSISTENT USE) Possible null dereference of variable a. This variable is checked for Null at lines: 274:test.c
@test.c
@Inconsistency error
@None
@
Entering cil_body("test29")...
Entering cil_body("test30")...
Entering cil_body("test31")...
@orange
@303 orange (INCONSISTENT USE) Possible null dereference of variable p. This variable is checked for Null at lines: 304:test.c
@test.c
@Inconsistency error
@None
@
Entering cil_body("test32")...
@orange
@312 orange (INCONSISTENT USE) Possible null dereference of variable p. This variable is checked for Null at lines: 312:test.c
@test.c
@Inconsistency error
@None
@
@orange
@311 orange (INCONSISTENT USE) Possible null dereference of variable p. This variable is checked for Null at lines: 312:test.c
@test.c
@Inconsistency error
@None
@
Entering cil_body("test33")...
Entering cil_body("test34")...
Entering cil_body("test35")...
@red
@340 red Possible NULL dereference of p with trace __arg0
@test.c
@Intraprocedural error with loop summary propagation
@None
@
Entering cil_body("test36")...
@red
@351 red Possible NULL dereference of p with trace __arg0
@test.c
@Intraprocedural error with loop summary propagation
@None
@
Entering cil_body("test37")...
Entering cil_body("test38")...
@red
@373 red Possible NULL dereference of p with trace __arg0
@test.c
@Intraprocedural error with loop summary propagation
@None
@
Entering cil_body("test39")...
@red
@389 red Possible NULL dereference of p with trace __arg0
@test.c
@Intraprocedural error with loop summary propagation
@None
@
Entering cil_body("test40")...
Entering cil_body("test41")...
@red
@425 red Possible NULL dereference of p with trace __arg0
@test.c
@Intraprocedural error with loop summary propagation
@None
@
Entering cil_body("test42")...
Entering cil_body("test43")...
@orange
@461 orange (INCONSISTENT USE) Possible null dereference of variable z. This variable is checked for Null at lines: 465:test.c
@test.c
@Inconsistency error
@None
@
Entering cil_body("test44")...
Entering cil_body("test45")...
Entering cil_body("test46")...
@orange
@513 orange (INCONSISTENT USE) Possible null dereference of variable z. This variable is checked for Null at lines: 517:test.c
@test.c
@Inconsistency error
@None
@
Entering cil_body("test47")...
Entering cil_body("test48")...
Entering cil_body("test49")...
@blue
@539 blue __arg1 of function test47 can evaluate to NULL and is dereferenced through call chain: test48 (539:test.c), test47 (532:test.c),  final site of dereference is: (525:test.c)
@test.c
@Null pointer is passed to a function which dereferences it.
@None
@
Entering cil_body("test50")...
Entering cil_body("test51")...
Entering cil_body("test52")...
@violet
@564 violet (INCONSISTENT USE) Possible null dereference __arg1. This variable is checked for Null at lines: 565:test.c, and is dereferenced through call chain: test51 (564:test.c), test50 (558:test.c),  final site of dereference is: (550:test.c)
@test.c
@Interprocedural inconsistency error
@None
@
Analysis finished successfully.
Allocations:
main:                       1.8GB
add_rules:                  1.5GB
sat_solve:                161.6MB
parse:                    122.1MB
load_session_str:           3.9MB
add_dependency_edge:      224.6KB
bdb_load_session:         203.4KB
dump_session_str:         169.3KB
update_work_dependency:   121.2KB
finish_work_session:       59.6KB
dependency_load:           55.3KB
next_work_session:         49.1KB
merge_session_str:         27.5KB
bdb_merge_session_preds:   27.5KB
Timers:
main:          0:10
add_rules:     0:07
Entering cil_body("test53")...
Entering cil_body("test54")...
@violet
@580 violet (INCONSISTENT USE) Possible null dereference __arg0, __arg1. This variable is checked for Null at lines: 582:test.c, and is dereferenced through call chain: test53 (580:test.c),  final site of dereference is: (575:test.c)
@test.c
@Interprocedural inconsistency error
@None
@
Entering cil_body("test55")...
Entering cil_body("test56")...
@blue
@595 blue Variable __arg0 evaluates to NULL, but is dereferenced through call chain: test55 (595:test.c),  final site of dereference is: (589:test.c)
@test.c
@Conditional misuse before function call.
@None
@
@violet
@595 violet (INCONSISTENT USE) Possible null dereference __arg0. This variable is checked for Null at lines: 595:test.c, and is dereferenced through call chain: test55 (595:test.c),  final site of dereference is: (589:test.c)
@test.c
@Interprocedural inconsistency error
@None
@
Entering cil_body("test57")...
@red
@612 red Possible NULL dereference of p
@test.c
@Intraprocedural  Null error
@None
@
Entering cil_body("test58")...
@red
@629 red Possible NULL dereference of q
@test.c
@Intraprocedural  Null error
@None
@
@red
@631 red Possible NULL dereference of p with trace __arg0
@test.c
@Intraprocedural error with loop summary propagation
@None
@
Entering cil_body("test59")...
Entering cil_body("test60")...
Entering cil_body("test61")...
@blue
@651 blue __arg1 of function test59 can evaluate to NULL and is dereferenced through call chain: test60 (651:test.c), test59 (644:test.c),  final site of dereference is: (638:test.c)
@test.c
@Null pointer is passed to a function which dereferences it.
@None
@
Entering cil_body("test62")...
Entering cil_body("test63")...
Entering cil_body("test64")...
Entering cil_body("test65")...
Entering cil_body("test66")...
Entering cil_body("test67")...
Entering cil_body("test68")...
@violet
@733 violet (INCONSISTENT USE) Possible null dereference c. This variable is checked for Null at lines: 734:test.c, and is dereferenced through call chain: test67 (733:test.c),  final site of dereference is: (726:test.c)
@test.c
@Interprocedural inconsistency error
@None
@
Entering cil_body("test69")...
@violet
@743 violet (INCONSISTENT USE) Possible null dereference __arg0. This variable is checked for Null at lines: 745:test.c, and is dereferenced through call chain: test67 (743:test.c),  final site of dereference is: (726:test.c)
@test.c
@Interprocedural inconsistency error
@None
@
Entering cil_body("test70")...
Entering cil_body("test71")...
@violet
@764 violet (INCONSISTENT USE) Possible null dereference __arg0. This variable is checked for Null at lines: 766:test.c, and is dereferenced through call chain: test67 (764:test.c),  final site of dereference is: (726:test.c)
@test.c
@Interprocedural inconsistency error
@None
@
Entering cil_body("test72")...
Entering cil_body("test73")...
Entering cil_body("test74")...
Entering cil_body("test75")...
Entering cil_body("test76")...
Entering cil_body("test77")...
Entering cil_body("test78")...
Entering cil_body("test79")...
@red
@865 red Possible NULL dereference of p with trace __arg0
@test.c
@Intraprocedural error with loop summary propagation
@None
@
Entering cil_body("test80")...
Entering cil_body("test81")...
Entering cil_body("test82")...
@blue
@893 blue __arg0 of function test80 can evaluate to NULL and is dereferenced through call chain: test80 (893:test.c),  final site of dereference is: (872:test.c)
@test.c
@Null pointer is passed to a function which dereferences it.
@None
@
@blue
@895 blue Trace __arg0 of function test80 evaluates to NULL and is dereferenced through call chain: test80 (895:test.c),  final site of dereference is: (872:test.c)
@test.c
@Interprocedural Null error with loop summary propagation
@None
@
Entering cil_body("test83")...
Entering cil_body("test84")...
Entering cil_body("test85")...
Entering cil_body("test86")...
@orange
@944 orange (INCONSISTENT USE) Possible null dereference of variable p. This variable is checked for Null at lines: 941:test.c
@test.c
@Inconsistency error
@None
@
Entering cil_body("test87")...
Entering cil_body("test88")...
Entering cil_body("test89")...
Entering cil_body("test90")...
Entering cil_body("test91")...
@orange
@992 orange (INCONSISTENT USE) Possible null dereference of variable p. This variable is checked for Null at lines: 990:test.c, 991:test.c
@test.c
@Inconsistency error
@None
@
Entering cil_body("test92")...
@orange
@1004 orange (INCONSISTENT USE) Possible null dereference of variable p. This variable is checked for Null at lines: 999:test.c
@test.c
@Inconsistency error
@None
@
Entering cil_body("test93")...
Entering cil_body("test.c:test94")...
Entering cil_body("test.c:test95")...
@red
@1046 red Possible NULL dereference of list with trace list
@test.c
@Intraprocedural error with loop summary propagation
@None
@
Entering cil_body("test96")...
@orange
@1055 orange (INCONSISTENT USE) Possible null dereference of variable p. This variable is checked for Null at lines: 1054:test.c
@test.c
@Inconsistency error
@None
@
Entering cil_body("test97")...
Entering cil_body("test98")...
@orange
@1073 orange (INCONSISTENT USE) Possible null dereference of variable q. This variable is checked for Null at lines: 1072:test.c
@test.c
@Inconsistency error
@None
@
Entering cil_body("test99")...
Entering cil_body("test100")...
Entering cil_body("test101")...
Entering cil_body("test102")...
Entering cil_body("test103")...
Entering cil_body("test104")...
@green
@1121 green Return value from function test103 may be null.
@test.c
@Return Null error
@None
@
Entering cil_body("test105")...
@green
@1128 green Return value from function test101 may be null.
@test.c
@Return Null error
@None
@
Entering cil_body("test106")...
@green
@1135 green Return value from function test103 may be null.
@test.c
@Return Null error
@None
@
Entering cil_body("test107")...
Entering cil_body("test108")...
@green
@1149 green Return value from function test107 may be null.
@test.c
@Return Null error
@None
@
Entering cil_body("test109")...
Entering cil_body("test110")...
